<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.text.*?>

<AnchorPane xmlns="http://javafx.com/javafx/16"
            stylesheets="@styles.css">
    <ScrollPane fitToWidth="true" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0"
                AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
        <TextFlow id="aboutTextField" textAlignment="CENTER" >
            <Text lineSpacing="2.0" text="ВИЗУАЛИЗАТОР АЛГОРИТМА А*&#10;Приложение запускает алгоритм для заданного ориентированного взвешенного графа и находит кратчайший путь из вершины А в В, а также его длину.&#10;&#10;Вам нужно найти кратчайший путь в графе из вершины A в вершину B?&#10;&#10;Тогда, задайте граф одним из двух способов:&#10;а) Кликая по окну, выбирая необходимые действия: создать вершину, соединить вершины, удалить вершину.&#10;б) Импортировать граф из файла, в котором должны содержаться следующие сведения о графе:&#10;~количество вершин в графе&#10;~координаты вершин графа&#10;~матрица смежности графа с весами&#10;Далее, выберете эвристику, которая будет использоваться в алгоритме А*:&#10;а) Расстояние Чебышева&#10;б) Манхэттенская метрика&#10;в) Евклидово расстояние&#10;г) Нулевая эвристика (алгоритм Дейкстры)&#10;Нажмите кнопку Run для запуска алгоритма.&#10;Выберете начальную и конечную вершину пути.&#10;Алгоритм запущен.&#10;Вы можете ставить процесс работы алгоритма на паузу, а также переходить к предыдущему и следующему шагу работы алгоритма.&#10;&#10;В результате вы получите кратчайший путь из А в В, а также длину этого пути.&#10;">
                <font>
                    <Font size="14.0"/>
                </font>
            </Text>
        </TextFlow>
    </ScrollPane>
</AnchorPane>
